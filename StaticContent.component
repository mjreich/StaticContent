<?php
/**
 * StaticContent Component
 *
 * A Cumula component that allows you to specify a directory of HTML files which are then rendered through the default cumula template.
 * Routes are created automatically based on the file structure of the Static content directory.
 *
 * @package		Cumula
 * @subpackage	StaticContent
 * @author     Mike Reich
 * @license    MIT License
 * @copyright  2011 Mike Reich
 * @link       http://cumula.org
 */
class StaticContent extends BaseComponent {
	public function __construct() {
		parent::__construct();
	}
	
	public function startup() {
		$routes = array();
		if($this->config->getConfigValue('files_dir', false) === false)
			$this->config->setConfigValue('files_dir', ROOT.'/../static');
		if($this->config->getConfigValue('base_path', false) === false)
			$this->config->setConfigValue('base_path', '');
		Application::getRouter()->addEventListener(ROUTER_COLLECT_ROUTES, array(&$this, 'collectRoutes'));
		$am = Application::getAdminInterface();
		if($am)
			$am->addEventListener(ADMIN_COLLECT_SETTINGS_PAGES, array(&$this, 'setupAdminPages'));
	}
	
	public function collectRoutes() {
		$dir = $this->config->getConfigValue('files_dir');
		$url_path = $this->config->getConfigValue('base_path');
		$routes = array();
		if(file_exists($dir)) {
			$dir = dir($dir);
			$this->transDir($dir, &$routes, $url_path);
		}
		Application::getRouter()->addRoutes($routes);
	}
	
	/**
	 * Defines and adds the admin pages to the admin interface, exposing the installed/enabled class lists.
	 * 
	 */
	public function setupAdminPages($event, $args = null) {
		$am = Application::getAdminInterface();
		$page = $am->newAdminPage();
		$page->title = 'Static Content';
		$page->description = 'Settings for the Static Content component.';
		$page->route = '/admin/static_content';
		$page->component = &$this;
		$page->fields = array(array('name' => 'files_dir', 
									'title' => 'Static Files Dir (Absolute Filesystem Path)',
									'type' => 'string',
									'value' => $this->config->getConfigValue('files_dir')),
							  array('name' => 'base_path', 
									'title' => 'URL Base Path',
									'type' => 'string',
									'value' => $this->config->getConfigValue('base_path'))
							);					
		$am->addAdminPage($page); 
		
	}
	
	protected function transDir($dir, $routes, $base_path) {
		while (false !== ($comp = $dir->read())) {
			if(substr($comp, 0, 1) == '.')
				continue;
			$comp_dir = $dir->path.'/'.$comp;
			if (is_file($comp_dir)) {
				$path = $base_path.'/'.str_replace('.html', '', $comp);
				$routes[$path] = array(&$this, 'handleStaticFile');
			} else if (is_dir($comp_dir)) {
				$this->transDir(dir($comp_dir), &$routes, $base_path.'/'.$comp);
			}
		}
	}

	public function handleStaticFile($route) {
		$files_dir = $this->config->getConfigValue('files_dir');
		$url_path = $this->config->getConfigValue('base_path');
		$file = $files_dir.'/'.substr_replace($route, '', 0, strlen($url_path)).'.html';
		$this->render($file);
	}

}
